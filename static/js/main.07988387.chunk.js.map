{"version":3,"sources":["actions/listsActions.js","actions/cardsActions.js","actions/index.js","reducers/listsReducer.js","reducers/cardsReducer.js","reducers/boardsReducer.js","reducers/boardOrderReducer.js","reducers/activeBoardReducer.js","reducers/projectsReducer.js","reducers/projectOrderReducer.js","reducers/activeProjectReducer.js","reducers/index.js","store/index.js","components/TrelloForm.js","components/TrelloButton.js","components/TrelloCard.js","components/TrelloOpenForm.js","components/TrelloCreate.js","components/TrelloList.js","components/BoardThumbnail.js","components/Home.js","actions/projectActions.js","components/TrelloBoard.js","actions/boardActions.js","components/BoardDashboard.js","routes/index.js","components/App.js","serviceWorker.js","index.js"],"names":["addList","title","dispatch","getState","projectID","activeProject","boardID","activeBoard","id","uuid","type","CONSTANTS","ADD_LIST","payload","sort","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","draggableId","DRAG_HAPPENED","addCard","listID","text","ADD_CARD","EDIT_CARD","DELETE_CARD","EDIT_LIST_TITLE","DELETE_LIST","SET_ACTIVE_BOARD","ADD_BOARD","DELETE_BOARD","ADD_PROJECT","SET_ACTIVE_PROJECT","initialState","list-0","cards","board","listsReducer","state","arguments","length","undefined","action","_action$payload","newList","concat","Object","objectSpread","defineProperty","_action$payload2","list","push","_action$payload3","_list$cards","card","splice","apply","toConsumableArray","_listEnd$cards","_objectSpread5","listStart","listEnd","_action$payload4","newCards","filter","cardID","_action$payload5","newTitle","newState","card-0","cardsReducer","newCard","newText","board-0","lists","project","boardsReducer","newListID","newLists","pulledOutList","newID","newBoard","console","log","boardId","boardOrderReducer","e","activeBoardReducer","project-0","boards","projectsReducer","newProject","projectOrderReducer","activeProjectReducer","combineReducers","projects","projectOrder","boardOrder","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","Container","styled","div","_templateObject","StyledCard","Card","_templateObject2","StyledTextArea","Textarea","_templateObject3","ButtonContainer","_templateObject4","StyledIcon","Icon","_templateObject5","TrelloForm","React","memo","_ref","_ref$text","onChange","closeForm","children","placeholder","react_default","a","createElement","autoFocus","value","onBlur","onMouseDown","StyledButton","Button","TrelloButton_templateObject","TrelloButton","onClick","variant","CardContainer","TrelloCard_templateObject","EditButton","TrelloCard_templateObject2","DeleteButton","TrelloCard_templateObject3","TrelloCard","index","_useState","useState","_useState2","slicedToArray","isEditing","setIsEditing","_useState3","_useState4","cardText","setText","handleChange","target","saveCard","preventDefault","editCard","handleDeleteCard","deleteCard","components_TrelloForm","components_TrelloButton","react_beautiful_dnd_esm","String","provided","assign","draggableProps","dragHandleProps","ref","innerRef","onDoubleClick","Card_default","fontSize","CardContent_default","Typography_default","connect","TrelloOpenForm","buttonTextOpacity","buttonTextColor","buttonTextBackground","OpenFormButton","TrelloOpenForm_templateObject","Icon_default","style","flexShrink","TrelloCreate","formOpen","openForm","_this","setState","handleInputChange","handleAddList","props","handleAddCard","_this$props","renderOpenForm","buttonText","TrelloCreate_templateObject","this","components_TrelloOpenForm","PureComponent","ListContainer","TrelloList_templateObject","StyledInput","input","TrelloList_templateObject2","TitleContainer","TrelloList_templateObject3","TrelloList_templateObject4","ListTitle","h4","TrelloList_templateObject5","listTitle","setListTitle","handleFocus","select","handleFinishEditing","editTitle","handleDeleteList","deleteList","droppableId","onSubmit","onFocus","TrelloList_DeleteButton","droppableProps","map","components_TrelloCard","components_TrelloCreate","Thumbnail","BoardThumbnail_templateObject","Title","BoardThumbnail_templateObject2","Fragment","Thumbnails","Home_templateObject","HomeContainer","Home_templateObject2","CreateTitle","h3","Home_templateObject3","CreateInput","Home_templateObject4","newProjectTitle","setNewProjectTitle","handleSubmit","addProject","textAlign","react_router_dom","to","textDecoration","components_BoardThumbnail","ListsContainer","TrelloBoard_templateObject","TrelloBoard","onDragEnd","result","destination","source","match","params","listOrder","direction","listCards","components_TrelloList","BoardDashboard_templateObject","BoardDashboard_templateObject2","BoardDashboard_templateObject3","BoardDashboard_templateObject4","BoardDashboard_templateObject5","newBoardTitle","setNewBoardTitle","useEffect","addBoard","BoardDashboard_HomeContainer","BoardDashboard_CreateTitle","BoardDashboard_CreateInput","BoardDashboard_Thumbnails","projectBoards","hasOwnProperty","obj","prop","keys","constructor","color","marginTop","BoardDashboard_DeleteButton","renderBoards","AppRouter","react_router","path","exact","component","Home","BoardDashboard","App","routes","Boolean","window","location","hostname","store","createStore","applyMiddleware","thunk","persistor","persistStore","Store","GlobalStyle","createGlobalStyle","src_templateObject","ReactDOM","render","es","integration_react","loading","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.07988387.chunk.js","sourcesContent":["import { CONSTANTS } from \"../actions\";\nimport uuid from \"uuidv4\";\n\nexport const addList = title => {\n  return (dispatch, getState) => {\n    const projectID = getState().activeProject;\n    const boardID = getState().activeBoard;\n    const id = uuid();\n    dispatch({\n      type: CONSTANTS.ADD_LIST,\n      payload: { title, projectID, boardID, id },\n    });\n  };\n};\n\nexport const sort = (\n  droppableIdStart,\n  droppableIdEnd,\n  droppableIndexStart,\n  droppableIndexEnd,\n  draggableId,\n  type\n) => {\n  return (dispatch, getState) => {\n    const projectID = getState().activeProject;\n    const boardID = getState().activeBoard;\n    dispatch({\n      type: CONSTANTS.DRAG_HAPPENED,\n      payload: {\n        droppableIdStart,\n        droppableIdEnd,\n        droppableIndexEnd,\n        droppableIndexStart,\n        draggableId,\n        type,\n        projectID,\n        boardID,\n      },\n    });\n  };\n};\n\nexport const editTitle = (listID, newTitle) => {\n  return {\n    type: CONSTANTS.EDIT_LIST_TITLE,\n    payload: {\n      listID,\n      newTitle,\n    },\n  };\n};\n\nexport const deleteList = listID => {\n  return (dispatch, getState) => {\n    const projectID = getState().activeProject;\n    const boardID = getState().activeBoard;\n    return dispatch({\n      type: CONSTANTS.DELETE_LIST,\n      payload: {\n        listID,\n        projectID,\n        boardID,\n      },\n    });\n  };\n};\n","import { CONSTANTS } from \"../actions\";\nimport uuid from \"uuidv4\";\n\nexport const addCard = (listID, text) => {\n  const id = uuid();\n  return {\n    type: CONSTANTS.ADD_CARD,\n    payload: { text, listID, id }\n  };\n};\n\nexport const editCard = (id, listID, newText) => {\n  return {\n    type: CONSTANTS.EDIT_CARD,\n    payload: { id, listID, newText }\n  };\n};\n\nexport const deleteCard = (id, listID) => {\n  return {\n    type: CONSTANTS.DELETE_CARD,\n    payload: { id, listID }\n  };\n};\n","export * from \"./listsActions\";\nexport * from \"./cardsActions\";\nexport * from \"./boardActions\";\nexport * from \"./projectActions\";\n\nexport const CONSTANTS = {\n  ADD_CARD: \"ADD_CARD\",\n  ADD_LIST: \"ADD_LIST\",\n  DRAG_HAPPENED: \"DRAG_HAPPENED\",\n  EDIT_CARD: \"EDIT_CARD\",\n  DELETE_CARD: \"DELETE_CARD\",\n  EDIT_LIST_TITLE: \"EDIT_LIST_TITLE\",\n  DELETE_LIST: \"DELETE_LIST\",\n  SET_ACTIVE_BOARD: \"SET_ACTIVE_BOARD\",\n  ADD_BOARD: \"ADD_BOARD\",\n  DELETE_BOARD: \"DELETE_BOARD\",\n  ADD_PROJECT: \"ADD_PROJECT\",\n  SET_ACTIVE_PROJECT: \"SET_ACTIVE_PROJECT\",\n};\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = {\n  \"list-0\": {\n    id: \"list-0\",\n    cards: [\"card-0\"],\n    title: \"Sample List\",\n    board: \"board-0\",\n  },\n};\n\nconst listsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_LIST: {\n      const { title, id } = action.payload;\n      const newList = {\n        title: title,\n        id: `list-${id}`,\n        cards: [],\n      };\n\n      const newState = { ...state, [`list-${id}`]: newList };\n\n      return newState;\n    }\n\n    case CONSTANTS.ADD_CARD: {\n      const { listID, id } = action.payload;\n      const list = state[listID];\n      list.cards.push(`card-${id}`);\n      return { ...state, [listID]: list };\n    }\n\n    case CONSTANTS.DRAG_HAPPENED:\n      const {\n        droppableIdStart,\n        droppableIdEnd,\n        droppableIndexEnd,\n        droppableIndexStart,\n\n        type,\n      } = action.payload;\n\n      // draggin lists around - the listOrderReducer should handle this\n      if (type === \"list\") {\n        return state;\n      }\n\n      // in the same list\n      if (droppableIdStart === droppableIdEnd) {\n        const list = state[droppableIdStart];\n        const card = list.cards.splice(droppableIndexStart, 1);\n        list.cards.splice(droppableIndexEnd, 0, ...card);\n        return { ...state, [droppableIdStart]: list };\n      }\n\n      // other list\n      if (droppableIdStart !== droppableIdEnd) {\n        // find the list where the drag happened\n        const listStart = state[droppableIdStart];\n        // pull out the card from this list\n        const card = listStart.cards.splice(droppableIndexStart, 1);\n        // find the list where the drag ended\n        const listEnd = state[droppableIdEnd];\n\n        // put the card in the new list\n        listEnd.cards.splice(droppableIndexEnd, 0, ...card);\n        return {\n          ...state,\n          [droppableIdStart]: listStart,\n          [droppableIdEnd]: listEnd,\n        };\n      }\n      return state;\n\n    case CONSTANTS.DELETE_CARD: {\n      const { listID, id } = action.payload;\n\n      const list = state[listID];\n      const newCards = list.cards.filter(cardID => cardID !== id);\n\n      return { ...state, [listID]: { ...list, cards: newCards } };\n    }\n\n    case CONSTANTS.EDIT_LIST_TITLE: {\n      const { listID, newTitle } = action.payload;\n\n      const list = state[listID];\n      list.title = newTitle;\n      return { ...state, [listID]: list };\n    }\n\n    case CONSTANTS.DELETE_LIST: {\n      const { listID } = action.payload;\n      const newState = state;\n      delete newState[listID];\n      return newState;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default listsReducer;\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = {\n  \"card-0\": {\n    text: \"Sample Card\",\n    id: `card-0`,\n    list: \"list-0\",\n  },\n};\n\nconst cardsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_CARD: {\n      const { text, listID, id } = action.payload;\n\n      const newCard = {\n        text,\n        id: `card-${id}`,\n        list: listID,\n      };\n\n      return { ...state, [`card-${id}`]: newCard };\n    }\n    case CONSTANTS.EDIT_CARD: {\n      const { id, newText } = action.payload;\n      const card = state[id];\n      card.text = newText;\n      return { ...state, [`card-${id}`]: card };\n    }\n\n    case CONSTANTS.DELETE_CARD: {\n      const { id } = action.payload;\n      const newState = state;\n      delete newState[id];\n      return newState;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default cardsReducer;\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = {\n  \"board-0\": {\n    id: \"board-0\",\n    lists: [\"list-0\"],\n    title: \"myboard\",\n    project: \"project-0\",\n  },\n};\n\nconst boardsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_LIST: {\n      const { boardID, id } = action.payload;\n      const board = state[boardID];\n      const newListID = `list-${id}`;\n      const newLists = [...board.lists, newListID];\n      board.lists = newLists;\n      return { ...state, [boardID]: board };\n    }\n\n    case CONSTANTS.DRAG_HAPPENED: {\n      const { boardID } = action.payload;\n      const board = state[boardID];\n      const lists = board.lists;\n      const {\n        droppableIndexEnd,\n        droppableIndexStart,\n\n        type,\n      } = action.payload;\n\n      // draggin lists around\n      if (type === \"list\") {\n        const pulledOutList = lists.splice(droppableIndexStart, 1);\n        lists.splice(droppableIndexEnd, 0, ...pulledOutList);\n        board.lists = lists;\n\n        return { ...state, [boardID]: board };\n      }\n      return state;\n    }\n    case CONSTANTS.DELETE_LIST: {\n      const { listID, boardID } = action.payload;\n      const board = state[boardID];\n      const lists = board.lists;\n      const newLists = lists.filter(id => id !== listID);\n      board.lists = newLists;\n      return { ...state, [boardID]: board };\n    }\n\n    case CONSTANTS.ADD_BOARD: {\n      const { title, id, project } = action.payload;\n      const newID = `board-${id}`;\n      const newBoard = {\n        id: newID,\n        title,\n        lists: [],\n        project,\n      };\n\n      return { ...state, [newID]: newBoard };\n    }\n\n    case CONSTANTS.DELETE_BOARD: {\n      console.log(\"inside\");\n      const { boardId } = action.payload;\n      const newState = state;\n      console.log(\"inside\", boardId);\n      delete newState[boardId];\n      console.log(\"inside\", newState);\n      return { ...newState };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default boardsReducer;\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = [\"board-0\"];\n\nconst boardOrderReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_BOARD: {\n      return [...state, `board-${action.payload.id}`];\n    }\n    case CONSTANTS.DELETE_BOARD: {\n      return state.filter(e => e !== action.payload.boardId);\n    }\n    default:\n      return state;\n  }\n};\n\nexport default boardOrderReducer;\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = null;\n\nconst activeBoardReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.SET_ACTIVE_BOARD: {\n      return action.payload;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default activeBoardReducer;\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = {\n  \"project-0\": {\n    id: \"project-0\",\n    boards: [\"board-0\"],\n    title: \"sample project\",\n  },\n};\n\nconst projectsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_PROJECT: {\n      // console.log(\"inside reducer\");\n      const { title, id } = action.payload;\n      const newID = `project-${id}`;\n      const newProject = {\n        id: newID,\n        title,\n        boards: [],\n      };\n\n      return { ...state, [newID]: newProject };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default projectsReducer;\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = [\"project-0\"];\n\nconst projectOrderReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_PROJECT: {\n      return [...state, `project-${action.payload.id}`];\n    }\n    default:\n      return state;\n  }\n};\n\nexport default projectOrderReducer;\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = null;\n\nconst activeProjectReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.SET_ACTIVE_PROJECT: {\n      return action.payload;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default activeProjectReducer;\n","import { combineReducers } from \"redux\";\nimport listsReducer from \"./listsReducer\";\nimport cardsReducer from \"./cardsReducer\";\nimport boardsReducer from \"./boardsReducer\";\nimport boardOrderReducer from \"./boardOrderReducer\";\nimport activeBoardReducer from \"./activeBoardReducer\";\nimport projectsReducer from \"./projectsReducer\";\nimport projectOrderReducer from \"./projectOrderReducer\";\nimport activeProjectReducer from \"./activeProjectReducer\";\n\nexport default combineReducers({\n  lists: listsReducer,\n  cards: cardsReducer,\n  projects: projectsReducer,\n  projectOrder: projectOrderReducer,\n  activeProject: activeProjectReducer,\n  boards: boardsReducer,\n  boardOrder: boardOrderReducer,\n  activeBoard: activeBoardReducer,\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"../reducers\";\nimport thunk from \"redux-thunk\";\n\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default () => {\n  let store = createStore(persistedReducer, applyMiddleware(thunk));\n  let persistor = persistStore(store);\n  return { store, persistor };\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Textarea from \"react-textarea-autosize\";\nimport Card from \"@material-ui/core/Card\";\n\nconst Container = styled.div`\n  width: 284px;\n  margin-bottom: 8px;\n`;\n\nconst StyledCard = styled(Card)`\n  min-height: 85px;\n  padding: 6px 8px 2px;\n`;\n\nconst StyledTextArea = styled(Textarea)`\n  resize: none;\n  width: 100%;\n  overflow: hidden;\n  outline: none;\n  border: none;\n`;\n\nconst ButtonContainer = styled.div`\n  margin-top: 8px;\n  display: flex;\n  align-items: center;\n  margin-left: 8px;\n`;\n\nconst StyledIcon = styled(Icon)`\n  margin-left: 8px;\n  cursor: pointer;\n`;\n\nconst TrelloForm = React.memo(\n  ({ list, text = \"\", onChange, closeForm, children }) => {\n    const placeholder = list\n      ? \"Enter list title...\"\n      : \"Enter a title for this card...\";\n\n    return (\n      <Container>\n        <StyledCard>\n          <StyledTextArea\n            placeholder={placeholder}\n            autoFocus\n            value={text}\n            onChange={e => onChange(e)}\n            onBlur={closeForm}\n          />\n        </StyledCard>\n        <ButtonContainer>\n          {children}\n          <StyledIcon onMouseDown={closeForm}>close</StyledIcon>\n        </ButtonContainer>\n      </Container>\n    );\n  }\n);\n\nexport default TrelloForm;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"@material-ui/core/Button\";\n\nconst StyledButton = styled(Button)`\n  && {\n    color: white;\n    background: #5aac44;\n  }\n`;\n\nconst TrelloButton = ({ children, onClick }) => {\n  return (\n    <StyledButton variant=\"contained\" onMouseDown={onClick}>\n      {children}\n    </StyledButton>\n  );\n};\n\nexport default TrelloButton;\n","import React, { useState } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport Icon from \"@material-ui/core/Icon\";\nimport TrelloForm from \"./TrelloForm\";\nimport { editCard, deleteCard } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport TrelloButton from \"./TrelloButton\";\n\nconst CardContainer = styled.div`\n  margin: 0 0 8px 0;\n  position: relative;\n  max-width: 100%;\n  word-wrap: break-word;\n`;\n\nconst EditButton = styled(Icon)`\n  position: absolute;\n  display: none;\n  right: 5px;\n  top: 5px;\n  opacity: 0.5;\n  ${CardContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst DeleteButton = styled(Icon)`\n  position: absolute;\n  display: none;\n  right: 5px;\n  bottom: 5px;\n  opacity: 0.5;\n  ${CardContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst TrelloCard = React.memo(({ text, id, listID, index, dispatch }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [cardText, setText] = useState(text);\n\n  const closeForm = e => {\n    setIsEditing(false);\n  };\n\n  const handleChange = e => {\n    setText(e.target.value);\n  };\n\n  const saveCard = e => {\n    e.preventDefault();\n\n    dispatch(editCard(id, listID, cardText));\n    setIsEditing(false);\n  };\n\n  const handleDeleteCard = e => {\n    console.log(listID);\n    dispatch(deleteCard(id, listID));\n  };\n\n  const renderEditForm = () => {\n    return (\n      <TrelloForm text={cardText} onChange={handleChange} closeForm={closeForm}>\n        <TrelloButton onClick={saveCard}>Save</TrelloButton>\n      </TrelloForm>\n    );\n  };\n\n  const renderCard = () => {\n    return (\n      <Draggable draggableId={String(id)} index={index}>\n        {provided => (\n          <CardContainer\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n            onDoubleClick={() => setIsEditing(true)}\n          >\n            <Card>\n              <EditButton\n                onMouseDown={() => setIsEditing(true)}\n                fontSize=\"small\"\n              >\n                edit\n              </EditButton>\n              <DeleteButton fontSize=\"small\" onMouseDown={handleDeleteCard}>\n                delete\n              </DeleteButton>\n\n              <CardContent>\n                <Typography>{text}</Typography>\n              </CardContent>\n            </Card>\n          </CardContainer>\n        )}\n      </Draggable>\n    );\n  };\n\n  return isEditing ? renderEditForm() : renderCard();\n});\n\nexport default connect()(TrelloCard);\n","import React from \"react\";\nimport Icon from \"@material-ui/core/Icon\";\nimport styled from \"styled-components\";\n\nconst TrelloOpenForm = ({ list, children, onClick }) => {\n  const buttonTextOpacity = list ? 1 : 0.5;\n  const buttonTextColor = list ? \"white\" : \"inherit\";\n  const buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\n\n  const OpenFormButton = styled.div`\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    border-radius: 3px;\n    height: 36px;\n    margin-left: 8px;\n    width: 300px;\n    padding-left: 10px;\n    padding-right: 10px;\n    opacity: ${buttonTextOpacity};\n    color: ${buttonTextColor};\n    background-color: ${buttonTextBackground};\n  `;\n\n  return (\n    <OpenFormButton onClick={onClick}>\n      <Icon>add</Icon>\n      <p style={{ flexShrink: 0 }}>{children}</p>\n    </OpenFormButton>\n  );\n};\n\nexport default TrelloOpenForm;\n","import React from \"react\";\nimport Icon from \"@material-ui/core/Icon\";\nimport TrelloButton from \"./TrelloButton\";\nimport { connect } from \"react-redux\";\nimport { addList, addCard } from \"../actions\";\nimport styled from \"styled-components\";\nimport TrelloForm from \"./TrelloForm\";\nimport TrelloOpenForm from \"./TrelloOpenForm\";\n\nclass TrelloCreate extends React.PureComponent {\n  state = {\n    formOpen: false,\n    text: \"\"\n  };\n\n  openForm = () => {\n    this.setState({\n      formOpen: true\n    });\n  };\n\n  closeForm = e => {\n    this.setState({\n      formOpen: false\n    });\n  };\n\n  handleInputChange = e => {\n    this.setState({\n      text: e.target.value\n    });\n  };\n\n  handleAddList = () => {\n    const { dispatch } = this.props;\n    const { text } = this.state;\n\n    if (text) {\n      this.setState({\n        text: \"\"\n      });\n      dispatch(addList(text));\n    }\n\n    return;\n  };\n\n  handleAddCard = () => {\n    const { dispatch, listID } = this.props;\n    const { text } = this.state;\n\n    if (text) {\n      this.setState({\n        text: \"\"\n      });\n      dispatch(addCard(listID, text));\n    }\n  };\n\n  renderOpenForm = () => {\n    const { list } = this.props;\n\n    const buttonText = list ? \"Add another list\" : \"Add another card\";\n    const buttonTextOpacity = list ? 1 : 0.5;\n    const buttonTextColor = list ? \"white\" : \"inherit\";\n    const buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\n\n    const OpenFormButton = styled.div`\n      display: flex;\n      align-items: center;\n      cursor: pointer;\n      border-radius: 3px;\n      height: 36px;\n      margin-left: 8px;\n      width: 300px;\n      padding-left: 10px;\n      padding-right: 10px;\n      opacity: ${buttonTextOpacity};\n      color: ${buttonTextColor};\n      background-color: ${buttonTextBackground};\n    `;\n\n    return (\n      <OpenFormButton onClick={this.openForm}>\n        <Icon>add</Icon>\n        <p style={{ flexShrink: 0 }}>{buttonText}</p>\n      </OpenFormButton>\n    );\n  };\n\n  render() {\n    const { text } = this.state;\n    const { list } = this.props;\n    return this.state.formOpen ? (\n      <TrelloForm\n        text={text}\n        onChange={this.handleInputChange}\n        closeForm={this.closeForm}\n      >\n        <TrelloButton onClick={list ? this.handleAddList : this.handleAddCard}>\n          {list ? \"Add List\" : \"Add Card\"}\n        </TrelloButton>\n      </TrelloForm>\n    ) : (\n      <TrelloOpenForm list={list} onClick={this.openForm}>\n        {list ? \"Add another list\" : \"Add another card\"}\n      </TrelloOpenForm>\n    );\n  }\n}\n\nexport default connect()(TrelloCreate);\n","import React, { useState } from \"react\";\nimport TrelloCard from \"./TrelloCard\";\nimport TrelloCreate from \"./TrelloCreate\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { editTitle, deleteList } from \"../actions\";\nimport Icon from \"@material-ui/core/Icon\";\n\nconst ListContainer = styled.div`\n  background-color: #dfe3e6;\n  border-radius: 3px;\n  width: 300px;\n  padding: 8px;\n  height: 100%;\n  margin: 0 8px 0 0;\n`;\n\nconst StyledInput = styled.input`\n  width: 100%;\n  border: none;\n  outline-color: blue;\n  border-radius: 3px;\n  margin-bottom: 3px;\n  padding: 5px;\n`;\n\nconst TitleContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  cursor: pointer;\n`;\n\nconst DeleteButton = styled(Icon)`\n  cursor: pointer;\n  transition: opacity 0.3s ease-in-out;\n  opacity: 0.4;\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst ListTitle = styled.h4`\n  transition: background 0.3s ease-in;\n  ${TitleContainer}:hover & {\n    background: #ccc;\n  }\n`;\n\nconst TrelloList = ({ title, cards, listID, index, dispatch }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [listTitle, setListTitle] = useState(title);\n\n  const renderEditInput = () => {\n    return (\n      <form onSubmit={handleFinishEditing}>\n        <StyledInput\n          type=\"text\"\n          value={listTitle}\n          onChange={handleChange}\n          autoFocus\n          onFocus={handleFocus}\n          onBlur={handleFinishEditing}\n        />\n      </form>\n    );\n  };\n\n  const handleFocus = e => {\n    e.target.select();\n  };\n\n  const handleChange = e => {\n    e.preventDefault();\n    setListTitle(e.target.value);\n  };\n\n  const handleFinishEditing = e => {\n    setIsEditing(false);\n    dispatch(editTitle(listID, listTitle));\n  };\n\n  const handleDeleteList = () => {\n    dispatch(deleteList(listID));\n  };\n\n  return (\n    <Draggable draggableId={String(listID)} index={index}>\n      {provided => (\n        <ListContainer\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n        >\n          <Droppable droppableId={String(listID)} type=\"card\">\n            {provided => (\n              <div>\n                <div>\n                  {isEditing ? (\n                    renderEditInput()\n                  ) : (\n                    <TitleContainer onClick={() => setIsEditing(true)}>\n                      <ListTitle>{listTitle}</ListTitle>\n                      <DeleteButton onClick={handleDeleteList}>\n                        delete\n                      </DeleteButton>\n                    </TitleContainer>\n                  )}\n                </div>\n                <div {...provided.droppableProps} ref={provided.innerRef}>\n                  {cards.map((card, index) => (\n                    <TrelloCard\n                      key={card.id}\n                      text={card.text}\n                      id={card.id}\n                      index={index}\n                      listID={listID}\n                    />\n                  ))}\n                  {provided.placeholder}\n                  <TrelloCreate listID={listID} />\n                </div>\n              </div>\n            )}\n          </Droppable>\n        </ListContainer>\n      )}\n    </Draggable>\n  );\n};\n\nexport default connect()(TrelloList);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\n\nconst Thumbnail = styled.div`\n  height: 280px;\n  width: 280px;\n  background: #fff;\n  padding: 10px;\n  margin: 8px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border-radius: 3px;\n  box-shadow: 0 2px 4px grey;\n`;\n\nconst Title = styled.h4`\n  color: #111;\n  text-decoration: none;\n`;\n\nconst BoardThumbnail = ({ title, id, dispatch }) => {\n  //  console.log (title);\n  return (\n    <>\n      <Thumbnail>\n        <Title>{title}</Title>\n      </Thumbnail>\n    </>\n  );\n};\n\n// export default BoardThumbnail;\nexport default connect()(BoardThumbnail);\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { addProject } from \"../actions\";\nimport BoardThumbnail from \"./BoardThumbnail\";\n\nconst Thumbnails = styled.div`\n  flex: 1;\n  height: 50%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst HomeContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  box-sizing: border-box;\n`;\n\nconst CreateTitle = styled.h3`\n  font-size: 48px;\n  color: white;\n  font-weight: bold;\n  font-family: Helvetica, Arial, sans-serif;\n`;\n\nconst CreateInput = styled.input`\n  width: 400px;\n  height: 80px;\n  font-size: 22px;\n  padding: 10px;\n  box-sizing: border-box;\n  border-radius: 3px;\n  border: none;\n  outline-color: blue;\n  box-shadow: 0 2px 4px grey;\n  align-self: center;\n`;\n\nconst Home = ({ projects, projectOrder, dispatch }) => {\n  // this is the home site that shows your projects and you can also create a Project here.\n\n  const [newProjectTitle, setNewProjectTitle] = useState(\"\");\n\n  const handleChange = e => {\n    setNewProjectTitle(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(addProject(newProjectTitle));\n  };\n\n  const renderBoards = () => {\n    return projectOrder.map(projectID => {\n      const project = projects[projectID];\n\n      return (\n        <Link\n          key={projectID}\n          to={`/project/${project.id}`}\n          style={{ textDecoration: \"none\" }}\n        >\n          <BoardThumbnail {...project} />\n        </Link>\n      );\n    });\n  };\n\n  const renderCreateBoard = () => {\n    return (\n      <form onSubmit={handleSubmit} style={{ textAlign: \"center\" }}>\n        <CreateTitle>Create a new Project</CreateTitle>\n        <CreateInput\n          onChange={handleChange}\n          value={newProjectTitle}\n          placeholder=\"Your projects title...\"\n          type=\"text\"\n        />\n      </form>\n    );\n  };\n\n  return (\n    <HomeContainer>\n      {renderCreateBoard()}\n      <Thumbnails>{renderBoards()}</Thumbnails>\n    </HomeContainer>\n  );\n};\n\nconst mapStateToProps = state => ({\n  projects: state.projects,\n  projectOrder: state.projectOrder,\n});\n\nexport default connect(mapStateToProps)(Home);\n","import { CONSTANTS } from \"../actions\";\nimport uuid from \"uuidv4\";\n\nexport const setActiveProject = id => {\n  return {\n    type: CONSTANTS.SET_ACTIVE_PROJECT,\n    payload: id,\n  };\n};\n\nexport const addProject = title => {\n  // console.log(\"here\", CONSTANTS.ADD_PROJECT, title);\n  const id = uuid();\n  return {\n    type: CONSTANTS.ADD_PROJECT,\n    payload: { title, id },\n  };\n};\n","import React, { PureComponent } from \"react\";\nimport TrelloList from \"./TrelloList\";\nimport { connect } from \"react-redux\";\nimport TrelloCreate from \"./TrelloCreate\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { sort, setActiveBoard } from \"../actions\";\nimport { Link } from \"react-router-dom\";\n\nconst ListsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\n// TODO: Fix performance issue\n\nclass TrelloBoard extends PureComponent {\n  componentDidMount() {\n    // set active trello board here\n    const { boardID } = this.props.match.params;\n\n    this.props.dispatch(setActiveBoard(boardID));\n  }\n\n  onDragEnd = result => {\n    const { destination, source, draggableId, type } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    this.props.dispatch(\n      sort(\n        source.droppableId,\n        destination.droppableId,\n        source.index,\n        destination.index,\n        draggableId,\n        type\n      )\n    );\n  };\n\n  render() {\n    const { lists, cards, match, boards, activeProject } = this.props;\n    const { boardID } = match.params;\n    const board = boards[boardID];\n    if (!board) {\n      return <p>Board not found</p>;\n    }\n    const listOrder = board.lists;\n\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <Link to={`/project/${activeProject}`}>Go Back</Link>\n        <h2>{board.title}</h2>\n        <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\n          {provided => (\n            <ListsContainer\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n            >\n              {listOrder.map((listID, index) => {\n                const list = lists[listID];\n                if (list) {\n                  const listCards = list.cards.map(cardID => cards[cardID]);\n\n                  return (\n                    <TrelloList\n                      listID={list.id}\n                      key={list.id}\n                      title={list.title}\n                      cards={listCards}\n                      index={index}\n                    />\n                  );\n                }\n              })}\n              {provided.placeholder}\n              <TrelloCreate list />\n            </ListsContainer>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  lists: state.lists,\n  cards: state.cards,\n  boards: state.boards,\n  activeProject: state.activeProject,\n});\n\nexport default connect(mapStateToProps)(TrelloBoard);\n","import { CONSTANTS } from \"../actions\";\nimport uuid from \"uuidv4\";\n\nexport const setActiveBoard = id => {\n  return {\n    type: CONSTANTS.SET_ACTIVE_BOARD,\n    payload: id,\n  };\n};\n\nexport const addBoard = (title, project) => {\n  const id = uuid();\n  return {\n    type: CONSTANTS.ADD_BOARD,\n    payload: { title, id, project },\n  };\n};\n\nexport const deleteBoard = boardId => {\n  return {\n    type: CONSTANTS.DELETE_BOARD,\n    payload: { boardId },\n  };\n};\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { addBoard, setActiveProject } from \"../actions\";\nimport BoardThumbnail from \"./BoardThumbnail\";\nimport Icon from \"@material-ui/core/Icon\";\n\nimport { deleteBoard } from \"../actions\";\n\nconst DeleteButton = styled(Icon)`\n  top: 90%;\n  opacity: 0.5;\n  margin-left: 45%;\n`;\n\nconst Thumbnails = styled.div`\n  flex: 1;\n  height: 50%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst HomeContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  box-sizing: border-box;\n`;\n\nconst CreateTitle = styled.h3`\n  font-size: 48px;\n  color: white;\n  font-weight: bold;\n  font-family: Helvetica, Arial, sans-serif;\n`;\n\nconst CreateInput = styled.input`\n  width: 400px;\n  height: 80px;\n  font-size: 22px;\n  padding: 10px;\n  box-sizing: border-box;\n  border-radius: 3px;\n  border: none;\n  outline-color: blue;\n  box-shadow: 0 2px 4px grey;\n  align-self: center;\n`;\n\nconst BoardDashboard = ({\n  boards,\n  boardOrder,\n  dispatch,\n  match,\n  activeProject,\n}) => {\n  // this is the home site that shows you your boards and you can also create a Board here.\n\n  const [newBoardTitle, setNewBoardTitle] = useState(\"\");\n\n  const handleChange = e => {\n    setNewBoardTitle(e.target.value);\n  };\n\n  useEffect(() => {\n    const { projectID } = match.params;\n\n    dispatch(setActiveProject(projectID));\n  }, []);\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(addBoard(newBoardTitle, match.params.projectID));\n  };\n\n  const renderBoards = () => {\n    const projectBoards = {};\n\n    for (var key in boards) {\n      // skip loop if the property is from prototype\n      if (!boards.hasOwnProperty(key)) continue;\n\n      var obj = boards[key];\n      for (var prop in obj) {\n        // skip loop if the property is from prototype\n        if (!obj.hasOwnProperty(prop)) continue;\n        // your code\n        if (\n          obj[\"project\"] === match.params.projectID &&\n          obj[\"title\"].length > 0\n        ) {\n          projectBoards[key] = { ...obj };\n        }\n      }\n    }\n\n    console.log(\"projectBoards\", boards);\n    return Object.keys(projectBoards).length === 0 &&\n      projectBoards.constructor === Object ? (\n      <h2 style={{ color: \"red\", marginTop: \"50px\" }}>No Boards Added</h2>\n    ) : (\n      boardOrder.map(boardID => {\n        const board = projectBoards[boardID];\n\n        return (\n          <div key={boardID}>\n            <Link\n              to={`/project/${match.params.projectID}/board/${boardID}`}\n              style={{ textDecoration: \"none\" }}\n            >\n              <BoardThumbnail {...board} />\n            </Link>\n\n            <DeleteButton\n              fontSize=\"large\"\n              onClick={() => {\n                dispatch(deleteBoard(boardID));\n              }}\n            >\n              delete\n            </DeleteButton>\n          </div>\n        );\n      })\n    );\n  };\n\n  const renderCreateBoard = () => {\n    return (\n      <form onSubmit={handleSubmit} style={{ textAlign: \"center\" }}>\n        <CreateTitle>Create a new Board</CreateTitle>\n        <CreateInput\n          onChange={handleChange}\n          value={newBoardTitle}\n          placeholder=\"Your boards title...\"\n          type=\"text\"\n        />\n      </form>\n    );\n  };\n\n  return (\n    <>\n      <Link to=\"/\">Go Back</Link>\n      <HomeContainer>\n        {renderCreateBoard()}\n        <Thumbnails>{renderBoards()}</Thumbnails>\n      </HomeContainer>\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  boards: state.boards,\n  boardOrder: state.boardOrder,\n  activeProject: state.activeProject,\n});\n\nexport default connect(mapStateToProps)(BoardDashboard);\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"../components/Home\";\nimport TrelloBoard from \"../components/TrelloBoard\";\nimport BoardDashboard from \"../components/BoardDashboard\";\n\nconst AppRouter = () => {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/project/:projectID\" exact component={BoardDashboard} />\n          <Route\n            path=\"/project/:projectID/board/:boardID\"\n            exact\n            component={TrelloBoard}\n          />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { PureComponent } from \"react\";\nimport TrelloList from \"./TrelloList\";\nimport { connect } from \"react-redux\";\nimport TrelloCreate from \"./TrelloCreate\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport Routes from \"../routes\";\nimport { sort } from \"../actions\";\n\nclass App extends PureComponent {\n  render() {\n    return <Routes />;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport Store from \"./store\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nconst { persistor, store } = Store();\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    background-color: #0079bf;\n    box-sizing: border-box;\n    transition: all 0.5s ease-in;\n  }\n`;\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <GlobalStyle />\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}